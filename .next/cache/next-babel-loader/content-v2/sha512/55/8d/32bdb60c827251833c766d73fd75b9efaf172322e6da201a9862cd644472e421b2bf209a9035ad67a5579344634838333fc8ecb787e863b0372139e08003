{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport classes from \"./MeetupDetail.module.css\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"props.meetupData.description\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: classes.detail,\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: props.meetupData.image,\n        alt: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"h1\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"address\", {\n        children: props.meetupData.address\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: props.meetupData.description\n      })]\n    })]\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Vrutik:Vrutik2468@cluster0.vqetv.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Vrutik:Vrutik2468@cluster0.vqetv.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetups._id.toString(),\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image,\n        description: meetups.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}